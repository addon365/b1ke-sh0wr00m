// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using addon365.Chit.EfContext;

namespace addon365.Chit.EfContext.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20191220070711_subscriber")]
    partial class subscriber
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("addon365")
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("addon365.Chit.DataEntity.ChitGroupTable", b =>
                {
                    b.Property<Guid>("KeyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("BranchMasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChitGroupAccessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ChitSchemeKeyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedDeviceId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentFrequency")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("TotalDues")
                        .HasColumnType("smallint");

                    b.Property<short>("TotalMember")
                        .HasColumnType("smallint");

                    b.Property<Guid>("YearId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("KeyId");

                    b.HasIndex("ChitSchemeKeyId");

                    b.ToTable("ChitGroups");
                });

            modelBuilder.Entity("addon365.Chit.DataEntity.ChitSchemeTable", b =>
                {
                    b.Property<Guid>("KeyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("BonusAmount")
                        .HasColumnType("float");

                    b.Property<Guid?>("BranchMasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedDeviceId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<double>("FinalBonus")
                        .HasColumnType("float");

                    b.Property<bool>("HasFixedDate")
                        .HasColumnType("bit");

                    b.Property<int>("MaxMembers")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<double>("MonthlyAmount")
                        .HasColumnType("float");

                    b.Property<string>("SchemaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalMonths")
                        .HasColumnType("int");

                    b.Property<Guid>("YearId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("KeyId");

                    b.ToTable("ChitSchemes");
                });

            modelBuilder.Entity("addon365.Chit.DataEntity.ChitSubscriberTable", b =>
                {
                    b.Property<Guid>("KeyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchMasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChitGroupKeyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClosedVoucherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedDeviceId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<Guid>("CustomerKeyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubscribeAccessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("YearId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("KeyId");

                    b.HasIndex("ChitGroupKeyId");

                    b.HasIndex("CustomerKeyId");

                    b.ToTable("ChitSubscribers");
                });

            modelBuilder.Entity("addon365.Common.DataEntity.RoleGroupMaster", b =>
                {
                    b.Property<Guid>("KeyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchMasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedDeviceId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("YearId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("KeyId");

                    b.ToTable("RoleGroupMaster");
                });

            modelBuilder.Entity("addon365.Common.DataEntity.User", b =>
                {
                    b.Property<Guid>("KeyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConfirmPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OtherId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RoleGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SessionToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KeyId");

                    b.HasIndex("RoleGroupId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("addon365.Crm.DataEntity.Address.Master", b =>
                {
                    b.Property<Guid>("KeyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("BranchMasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedDeviceId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LocalityOrVillage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LocalityOrVillageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<long>("PinOrZip")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("StateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubDistrict")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SubDistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("YearId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("KeyId");

                    b.ToTable("Master");
                });

            modelBuilder.Entity("addon365.Crm.DataEntity.BusinessContactTable", b =>
                {
                    b.Property<Guid>("KeyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchMasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BusinessMailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ContactAddressKeyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContactPersonKeyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedDeviceId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Landline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ProprietorKeyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SecondaryMobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("YearId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("KeyId");

                    b.HasIndex("ContactAddressKeyId");

                    b.HasIndex("ContactPersonKeyId");

                    b.HasIndex("ProprietorKeyId");

                    b.ToTable("BusinessContactTable");
                });

            modelBuilder.Entity("addon365.Crm.DataEntity.ContactTable", b =>
                {
                    b.Property<Guid>("KeyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchMasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContactAddressKeyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedDeviceId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondaryMobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("YearId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("KeyId");

                    b.HasIndex("ContactAddressKeyId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("addon365.Crm.DataEntity.CustomerTable", b =>
                {
                    b.Property<Guid>("KeyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchMasterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BusinessContactKeyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContactKeyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedDeviceId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerEmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserKeyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("YearId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("KeyId");

                    b.HasIndex("BusinessContactKeyId");

                    b.HasIndex("ContactKeyId");

                    b.HasIndex("UserKeyId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("addon365.Chit.DataEntity.ChitGroupTable", b =>
                {
                    b.HasOne("addon365.Chit.DataEntity.ChitSchemeTable", "ChitSchema")
                        .WithMany()
                        .HasForeignKey("ChitSchemeKeyId");
                });

            modelBuilder.Entity("addon365.Chit.DataEntity.ChitSubscriberTable", b =>
                {
                    b.HasOne("addon365.Chit.DataEntity.ChitGroupTable", "ChitSchema")
                        .WithMany()
                        .HasForeignKey("ChitGroupKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("addon365.Crm.DataEntity.CustomerTable", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("addon365.Common.DataEntity.User", b =>
                {
                    b.HasOne("addon365.Common.DataEntity.RoleGroupMaster", "RoleGroup")
                        .WithMany()
                        .HasForeignKey("RoleGroupId");
                });

            modelBuilder.Entity("addon365.Crm.DataEntity.BusinessContactTable", b =>
                {
                    b.HasOne("addon365.Crm.DataEntity.Address.Master", "ContactAddress")
                        .WithMany()
                        .HasForeignKey("ContactAddressKeyId");

                    b.HasOne("addon365.Crm.DataEntity.ContactTable", "ContactPerson")
                        .WithMany()
                        .HasForeignKey("ContactPersonKeyId");

                    b.HasOne("addon365.Crm.DataEntity.ContactTable", "Proprietor")
                        .WithMany()
                        .HasForeignKey("ProprietorKeyId");
                });

            modelBuilder.Entity("addon365.Crm.DataEntity.ContactTable", b =>
                {
                    b.HasOne("addon365.Crm.DataEntity.Address.Master", "ContactAddress")
                        .WithMany()
                        .HasForeignKey("ContactAddressKeyId");
                });

            modelBuilder.Entity("addon365.Crm.DataEntity.CustomerTable", b =>
                {
                    b.HasOne("addon365.Crm.DataEntity.BusinessContactTable", "BusinessContact")
                        .WithMany()
                        .HasForeignKey("BusinessContactKeyId");

                    b.HasOne("addon365.Crm.DataEntity.ContactTable", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactKeyId");

                    b.HasOne("addon365.Common.DataEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserKeyId");
                });
#pragma warning restore 612, 618
        }
    }
}
