// <auto-generated />
using Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Api.Database.Migrations
{
    [DbContext(typeof(ApiContext))]
    partial class ApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("swc")
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Api.Database.Entity.Enquiries.Enquiry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<Guid>("EnquiryTypeId");

                    b.Property<string>("Identifier");

                    b.Property<DateTime>("Modified");

                    b.Property<Guid>("ProfileId");

                    b.Property<Guid>("StatusId");

                    b.HasKey("Id");

                    b.HasIndex("EnquiryTypeId");

                    b.HasIndex("ProfileId");

                    b.HasIndex("StatusId");

                    b.ToTable("Enquiries");
                });

            modelBuilder.Entity("Api.Database.Entity.Enquiries.EnquiryStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<DateTime>("Modified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.ToTable("EnquiryStatus");
                });

            modelBuilder.Entity("Api.Database.Entity.Enquiries.EnquiryType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("EnquriyType");
                });

            modelBuilder.Entity("Api.Database.Entity.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Identifier");

                    b.Property<string>("MobileNumber");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("Name");

                    b.Property<string>("Place");

                    b.HasKey("Id");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("Api.Database.Entity.Threats.Status", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description")
                        .HasMaxLength(255);

                    b.Property<DateTime>("Modified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("Api.Database.Entity.Threats.Threat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("Host");

                    b.Property<string>("Identifier")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasComputedColumnSql("CONCAT('swc-',[Id])");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("Protocol");

                    b.Property<string>("QueryString");

                    b.Property<string>("Referer")
                        .HasMaxLength(255);

                    b.Property<Guid>("StatusId");

                    b.Property<Guid>("TypeId");

                    b.Property<string>("UserAgent");

                    b.Property<string>("XForwardHost");

                    b.Property<string>("XForwardProto");

                    b.HasKey("Id");

                    b.HasIndex("Referer")
                        .IsUnique()
                        .HasFilter("[Referer] IS NOT NULL");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeId");

                    b.ToTable("Threats");
                });

            modelBuilder.Entity("Api.Database.Entity.Threats.ThreatType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("Modified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Type");
                });

            modelBuilder.Entity("Api.Database.Entity.Enquiries.Enquiry", b =>
                {
                    b.HasOne("Api.Database.Entity.Enquiries.EnquiryType", "EnquiryType")
                        .WithMany("Enquiries")
                        .HasForeignKey("EnquiryTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Api.Database.Entity.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Api.Database.Entity.Enquiries.EnquiryStatus", "Status")
                        .WithMany("Enquiries")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Api.Database.Entity.Threats.Threat", b =>
                {
                    b.HasOne("Api.Database.Entity.Threats.Status", "Status")
                        .WithMany("Threats")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Api.Database.Entity.Threats.ThreatType", "ThreatType")
                        .WithMany("Threats")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
